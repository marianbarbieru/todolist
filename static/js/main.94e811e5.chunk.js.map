{"version":3,"sources":["ToDo.js","ToDoForm.js","ToDoList.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["ToDo","props","state","todo","isEditing","completed","removeTodo","bind","handleEditing","handleChange","handleUpdate","erase","evt","this","setState","target","name","value","preventDefault","updateToDo","id","remove","className","onSubmit","type","onChange","onClick","Component","ToDoForm","handleSubmit","newToDo","uuidv4","createToDo","htmlFor","placeholder","required","ToDoList","todos","create","update","arr","key","localStorage","lstodo","getItem","push","filter","hydrateStateWithLocalStorage","removeItem","setItem","updatedTodo","updatedTodos","map","obj","Footer","year","Date","getFullYear","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94e811e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\nclass ToDo extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttodo: this.props.todo,\r\n\t\t\tisEditing: false,\r\n\t\t\tcompleted: false,\r\n\t\t};\r\n\t\tthis.removeTodo = this.removeTodo.bind(this);\r\n\t\tthis.handleEditing = this.handleEditing.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleUpdate = this.handleUpdate.bind(this);\r\n\t\tthis.erase = this.erase.bind(this);\r\n\t}\r\n\r\n\thandleChange(evt) {\r\n\t\tthis.setState({ [evt.target.name]: evt.target.value });\r\n\t}\r\n\r\n\thandleUpdate(evt) {\r\n\t\tevt.preventDefault();\r\n\t\tthis.props.updateToDo(this.props.id, this.state.todo);\r\n\t\tthis.setState({ isEditing: false });\r\n\t}\r\n\r\n\tremoveTodo() {\r\n\t\tthis.props.remove(this.props.id);\r\n\t}\r\n\thandleEditing() {\r\n\t\tthis.setState({ isEditing: !this.state.isEditing });\r\n\t}\r\n\r\n\terase() {\r\n\t\tthis.setState({ completed: !this.state.completed });\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet result;\r\n\t\tif (this.state.isEditing) {\r\n\t\t\tresult = (\r\n\t\t\t\t<div className='ToDo'>\r\n\t\t\t\t\t<form className='ToDo-form' onSubmit={this.handleUpdate}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tvalue={this.state.todo}\r\n\t\t\t\t\t\t\tname='todo'\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button>Save</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tresult = (\r\n\t\t\t\t<div className='ToDo'>\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tclassName={this.state.completed ? 'completed' : ''}\r\n\t\t\t\t\t\tonClick={this.erase}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.props.todo}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<i className='fas fa-edit' onClick={this.handleEditing}></i>\r\n\t\t\t\t\t\t<i className='fas fa-trash-alt' onClick={this.removeTodo}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ToDoForm.css';\r\n\r\nclass ToDoForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { todo: '' };\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\thandleSubmit(evt) {\r\n\t\tevt.preventDefault();\r\n\t\tconst newToDo = { ...this.state, id: uuidv4(), completed: false };\r\n\t\tthis.props.createToDo(newToDo);\r\n\t\tthis.setState({ todo: '' });\r\n\t}\r\n\r\n\thandleChange(evt) {\r\n\t\tthis.setState({ [evt.target.name]: evt.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className='ToDoForm' onSubmit={this.handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='todo'>To Do: </label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder='Type your Todo'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='todo'\r\n\t\t\t\t\t\tid='todo'\r\n\t\t\t\t\t\tvalue={this.state.todo}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button>Add ToDo!</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ToDoForm;\r\n","import React, { Component } from 'react';\r\nimport ToDo from './ToDo';\r\nimport ToDoForm from './ToDoForm';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './ToDoList.css';\r\n\r\nclass ToDoList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttodos: [],\r\n\t\t};\r\n\r\n\t\tthis.create = this.create.bind(this);\r\n\t\tthis.remove = this.remove.bind(this);\r\n\t\tthis.update = this.update.bind(this);\r\n\t}\r\n\r\n\thydrateStateWithLocalStorage() {\r\n\t\tlet arr = [];\r\n\t\tfor (let key in localStorage) {\r\n\t\t\tlet lstodo = localStorage.getItem(key);\r\n\t\t\tarr.push({ todo: lstodo, id: key });\r\n\t\t}\r\n\t\tarr = arr.filter((todo) => {\r\n\t\t\treturn todo.todo !== null;\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\ttodos: [...this.state.todos, ...arr],\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.hydrateStateWithLocalStorage();\r\n\t}\r\n\r\n\tremove(id) {\r\n\t\tthis.setState({ todos: this.state.todos.filter((todo) => todo.id !== id) });\r\n\t\tlocalStorage.removeItem(id);\r\n\t}\r\n\r\n\tcreate(todo) {\r\n\t\tthis.setState({ todos: [...this.state.todos, todo] });\r\n\t\tlocalStorage.setItem(todo.id, todo.todo);\r\n\t}\r\n\r\n\tupdate(id, updatedTodo) {\r\n\t\tconst updatedTodos = this.state.todos.map((todo) => {\r\n\t\t\tif (todo.id === id) {\r\n\t\t\t\tlocalStorage.setItem(todo.id, updatedTodo);\r\n\t\t\t\treturn { ...todo, todo: updatedTodo };\r\n\t\t\t}\r\n\t\t\treturn todo;\r\n\t\t});\r\n\t\tthis.setState({ todos: updatedTodos });\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst todos = this.state.todos.map((obj) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ToDo\r\n\t\t\t\t\tkey={obj.id}\r\n\t\t\t\t\tid={obj.id}\r\n\t\t\t\t\ttodo={obj.todo}\r\n\t\t\t\t\tremove={this.remove}\r\n\t\t\t\t\tupdateToDo={this.update}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div className='ToDoList'>\r\n\t\t\t\t<h1 className='ToDoList-title'>To Do List!</h1>\r\n\t\t\t\t<p className='ToDoList-desc'>Make a list to be more organized!</p>\r\n\t\t\t\t<ul>{todos}</ul>\r\n\r\n\t\t\t\t<ToDoForm createToDo={this.create} key={uuidv4()} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ToDoList;\r\n","import React, { Component } from 'react';\r\nimport './footer.css';\r\n\r\nclass Footer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tlet year = new Date().getFullYear();\r\n\r\n\t\tthis.state = {\r\n\t\t\tyear: year,\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<footer className='Footer'>\r\n\t\t\t\t<h6>Made by Marian Barbieru &copy; {this.state.year}</h6>\r\n\t\t\t</footer>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport ToDoList from './ToDoList';\nimport Footer from './Footer';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ToDoList />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}